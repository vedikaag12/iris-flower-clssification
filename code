import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

from sklearn.datasets import load_iris
dataset = load_iris()

X = dataset.data
y = dataset.target

X[rows, columns]
X[0, 0]
X[:, 1]
X[1, :]
X[:2, :3] 
X[2:6, 1:3]


plt.scatter([1, 2, 3], [3, 2, 1])
plt.show()

plt.plot([1, 2, 3], [3, 2, 1])
plt.show()


plt.scatter(X[y == 0, 0], X[y == 0, 1], c = "r", label = "Setosa")
plt.scatter(X[y == 1, 0], X[y == 1, 1], c = "g", label = "Versicolor")
plt.scatter(X[y == 2, 0], X[y == 2, 1], c = "b", label = "Verginica")
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.legend()
plt.title('Analysis on the Iris Dataset')
plt.show()


plt.scatter(X[y == 0, 2], X[y == 0, 3], c = "r", label = "Setosa")
plt.scatter(X[y == 1, 2], X[y == 1, 3], c = "g", label = "Versicolor")
plt.scatter(X[y == 2, 2], X[y == 2, 3], c = "b", label = "Verginica")
plt.xlabel('Petal Length')
plt.ylabel('Petal Width')
plt.legend()
plt.title('Analysis on the Iris Dataset')
plt.show()
from sklearn.preprocessing import StandardScaler
X=StandardScaler().fit_transform(X)
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y)
from sklearn.linear_model import LogisticRegression
log_reg=LogisticRegression()
log_reg.fit(X_train,y_train)
log_reg.score(X_test,y_test)
log_reg.score(X,y)
